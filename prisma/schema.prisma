// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model User_Details{
  userId Int @id @default(autoincrement())
  firstName String
  lastName String
  email String @unique
  password String
  phoneNumber String
  address String
  isAdmin Boolean @default(false)
  orders Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Menu_Category{
  categoryId Int @id @default(autoincrement())
  categoryName String @unique
  description String
  menuItem Menu_Item[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

model Menu_Item{
  itemId Int @id @default(autoincrement())
  itemName String @unique
  description String
  categoryId Int?
  category Menu_Category? @relation(fields: [categoryId],references: [categoryId],onDelete:SetNull)
  price Decimal
  isAvailable Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
  orderItems Order_Item[]
}

model Payment_Status{
  statusId Int @id @default(autoincrement())
  statusName String
  order Order[]
}

model Order{
  orderId Int @id @default(autoincrement())
  userId Int?
  user User_Details? @relation(fields: [userId],references: [userId],onDelete: SetNull)
  paymentStatusId Int
  paymentStatus Payment_Status @relation(fields: [paymentStatusId],references: [statusId])
  totalOrderAmount Decimal @default(0)
  orderItems Order_Item[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

model Order_Item{
  orderItemId Int @id @default(autoincrement())
  orderId Int
  order Order @relation(fields: [orderId],references: [orderId],onDelete: Cascade)
  menuItemId Int?
  menuItem Menu_Item? @relation(fields: [menuItemId],references: [itemId])
  quantity Int
  price Decimal
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

